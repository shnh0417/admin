/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react';
import { Canvas } from '@react-three/fiber';
import { useGLTF, PerspectiveCamera } from '@react-three/drei';

function Model(props) {
   const { nodes, materials, scene } = useGLTF(require('assets/glb/kima_GLTF.glb'));
   console.log(nodes);
   console.log(materials);
   console.log(scene);
   return <primitive object={scene} scale={2} {...props} />;
   // return (
   // <group {...props} dispose={null}>
   //    <mesh
   //       castShadow
   //       receiveShadow
   //       userData={{ sample: '123' }}
   //       geometry={nodes.mesh_helmet_LP_13930damagedHelmet.geometry}
   //       material={materials.Material_MR}
   //       // position={[1, 2, 3]}
   //       // rotation={[0, 0, 0]}
   //       scale={2}></mesh>
   //    <group scale={2} dispose={null}>
   //       <mesh castShadow receiveShadow geometry={nodes.Mesh.geometry} material={materials.face} />
   //       <mesh castShadow receiveShadow geometry={nodes.Mesh_1.geometry} material={materials.eye} />
   //       <mesh castShadow receiveShadow geometry={nodes.Mesh_2.geometry} material={materials.hair} />
   //    </group>
   // </group>
   // );
}

useGLTF.preload(require('assets/glb/kima_GLTF.glb'));

export default Model;
